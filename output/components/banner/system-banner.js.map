{"version":3,"file":"system-banner.js","sourceRoot":"","sources":["../../../src/components/banner/system-banner.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACpC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,6BAA6B,EAAE,MAAM,0BAA0B,CAAC;AACzE,OAAO,MAAM,MAAO,sBAAsB,CAAC;AAE3C;;aAEa;AAEN,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,6BAA6B;IAA5D;;QACL;;qCAE6B;QACc,WAAM,GAAiB,SAAS,CAAC;QAE5E;;;;;8CAKsC;QACK,UAAK,GAAc,OAAO,CAAC;IAqBxE,CAAC;IAZW,MAAM;QACd,MAAM,WAAW,GAAG,IAAI,CAAA,yDAAyD,CAAC;QAClF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA,qBAAqB,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAA,2BAA2B,CAAC;QAEtG,OAAO,IAAI,CAAA;;eAEA,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;eACrD,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;;;KAG/D,CAAC;IACJ,CAAC;;AAbM,uBAAM,GAAG,CAAC,SAAM,MAAM,IAAI,EAAE,EAAE,MAAM,CAAC,AAA/B,CAAgC;AAfF;IAA1C,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;gDAAkC;AAQjC;IAA1C,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;+CAA4B;AAK1C;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;8CAA0B;AAjB1C,gBAAgB;IAD5B,aAAa,CAAC,oBAAoB,CAAC;GACvB,gBAAgB,CAiC5B","sourcesContent":["import { html, nothing } from \"lit\";\r\nimport { customElement, property } from \"lit/decorators.js\";\r\nimport { Alignment, BannerStatus } from \"../../types.js\";\r\nimport { ContourableCondensableElement } from \"../../mixins/condense.js\";\r\nimport styles  from \"./system-banner.scss\";\r\n\r\n/** Zeta system banner component.\r\n *\r\n * @public */\r\n@customElement(\"zeta-system-banner\")\r\nexport class ZetaSystemBanner extends ContourableCondensableElement {\r\n  /** Type of banner.\r\n   *\r\n   * @defaultValue 'default' */\r\n  @property({ type: String, reflect: true }) status: BannerStatus = \"default\";\r\n\r\n  /**\r\n   * Alignment of banner.\r\n   *\r\n   * Only start and center are valid options.\r\n   *\r\n   * @defaultValue `Alignment.start`. */\r\n  @property({ type: String, reflect: true }) align: Alignment = \"start\";\r\n\r\n  /** Text displayed on the banner.\r\n   *\r\n   * Can also be slotted. */\r\n  @property({ type: String }) text: string | undefined;\r\n\r\n  static styles = [super.styles || [], styles];\r\n\r\n  protected render() {\r\n    const leadingIcon = html`<slot name=\"leading icon\" class=\"leading icon\"> </slot>`;\r\n    const text = this.text ? html`<div class=\"text\">${this.text}</div>` : html`<slot name=\"text\"></slot>`;\r\n\r\n    return html`\r\n      <div class=\"system-banner\">\r\n        <div>${this.align == \"start\" ? [leadingIcon, text] : nothing}</div>\r\n        <div>${this.align != \"start\" ? [leadingIcon, text] : nothing}</div>\r\n        <div><slot name=\"trailing icon\" class=\"trailing icon\"></slot></div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"zeta-system-banner\": ZetaSystemBanner;\r\n  }\r\n}\r\n"]}