{"version":3,"file":"condense.js","sourceRoot":"","sources":["../../src/mixins/condense.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAO3C,MAAM,CAAC,MAAM,WAAW,GAAG,CAAoC,UAAa,EAAE,EAAE;IAC9E,MAAM,gBAAiB,SAAQ,UAAU;QAAzC;;YAC8C,cAAS,GAAG,KAAK,CAAC;QAgBhE,CAAC;;IAdQ,uBAAM,GAAG;QACb,UAA2C,CAAC,MAAM,IAAI,EAAE;QACzD,2CAA2C;QAC3C,GAAG,CAAA;;;;;;;;;OASF;KACF,AAbY,CAaX;IAf0C;QAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;uDAAmB;IAiBhE,OAAO,gBAAsE,CAAC;AAChF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;AAE1D,MAAM,CAAC,MAAM,6BAA6B,GAAG,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC","sourcesContent":["import { LitElement, css } from \"lit\";\r\nimport { property } from \"lit/decorators.js\";\r\nimport { Constructor } from \"./_utils.js\";\r\nimport { Contourable } from \"./contour.js\";\r\n\r\n// Define the interface for the mixin\r\nexport declare class CondensableInterface {\r\n  condensed: boolean;\r\n}\r\n\r\nexport const Condensable = <T extends Constructor<LitElement>>(superClass: T) => {\r\n  class CondensableClass extends superClass {\r\n    @property({ type: Boolean, reflect: true }) condensed = false;\r\n\r\n    static styles = [\r\n      (superClass as unknown as typeof LitElement).styles ?? [],\r\n      //TODO extract string to global file TOKENS\r\n      css`\r\n        :host,\r\n        :host * {\r\n          font-family: var(--type-family-regular);\r\n        }\r\n        :host([condensed]),\r\n        :host([condensed]) * {\r\n          font-family: var(--type-family-condensed);\r\n        }\r\n      `\r\n    ];\r\n  }\r\n  return CondensableClass as Constructor<CondensableInterface & LitElement> & T;\r\n};\r\n\r\nexport const CondensableElement = Condensable(LitElement);\r\n\r\nexport const ContourableCondensableElement = Contourable(Condensable(LitElement));\r\n"]}